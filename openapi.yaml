openapi: 3.0.0
info:
  title: Iris API
  description: SWAGGER for IRIS | Чат-Менеджер
  version: 1.0.5

servers:
  - url: https://iris-tg.ru/api/{bot_id}_{token}/v{version}
    description: API с аутентификацией
    variables:
      bot_id:
        default: "BotId"
        description: ID вашего бота
      token:
        default: "ApiToken"
        description: Ваш Iris-Token
      version:
        default: "100"
        description: Версия API (0.1, 0.100, 0.01, 0.001)

paths:
  /pocket/balance:
    get:
      summary: Получение баланса пользователя
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  gold:
                    type: integer
                    example: 0
                  sweets:
                    type: number
                    format: float
                    example: 0.0
                  donate_score:
                    type: integer
                    example: 0
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/sweets/give:
    get:
      summary: Перевод ирисок пользователю
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: sweets
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: comment
          in: query
          required: false
          schema:
            type: string
        - name: without_donate_score
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Успешный перевод
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/gold/give:
    get:
      summary: Перевод ирис-голд пользователю
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: gold
          in: query
          required: true
          schema:
            type: integer
        - name: comment
          in: query
          required: false
          schema:
            type: string
        - name: without_donate_score
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Успешный перевод
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/sweets/history:
    get:
      summary: История операций с ирисками
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: integer
                      description: Unix время в миллисекундах
                    amount:
                      type: number
                      description: Количество ирисок
                    balance:
                      type: number
                      description: Баланс после операции
                    to_user_id:
                      type: integer
                      description: ID получателя/отправителя
                    id:
                      type: integer
                      description: ID операции
                    type:
                      type: string
                      enum: [take, give]
                      description: Тип операции (получение/передача)
                    info:
                      type: object
                      description: Дополнительная информация о операции
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/gold/history:
    get:
      summary: История операций с ирис-голд
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: integer
                      description: Unix время в миллисекундах
                    amount:
                      type: number
                      description: Количество голд
                    balance:
                      type: number
                      description: Баланс после операции
                    to_user_id:
                      type: integer
                      description: ID получателя/отправителя
                    id:
                      type: integer
                      description: ID операции
                    type:
                      type: string
                      enum: [take, give]
                      description: Тип операции (получение/передача)
                    info:
                      type: object
                      description: Дополнительная информация о операции
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/enable:
    get:
      summary: Включение видимости мешка
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/disable:
    get:
      summary: Отключение видимости мешка
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/allow_all:
    get:
      summary: Разрешение переводов всем пользователям
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/deny_all:
    get:
      summary: Запрет переводов всем пользователям
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/deny_user:
    get:
      summary: Запрет переводов конкретному пользователю
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /pocket/allow_user:
    get:
      summary: Разрешение переводов конкретному пользователю
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'

  /k/trade/order_book:
    get:
      summary: Получение стакана торгов
      servers:
        - url: https://iris-tg.ru
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  buy:
                    type: array
                    items:
                      type: object
                      properties:
                        volume:
                          type: number
                          description: Объем ордера
                          example: 12859
                        price:
                          type: number
                          format: float
                          description: Цена ордера
                          example: 0.85
                  sell:
                    type: array
                    items:
                      type: object
                      properties:
                        volume:
                          type: number
                          description: Объем ордера
                          example: 6647
                        price:
                          type: number
                          format: float
                          description: Цена ордера
                          example: 0.87

  /trade/deals:
    get:
      summary: Получение информации о сделках
      servers:
        - url: https://iris-tg.ru
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            example: 32
          description: Идентификатор для получения сделок
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Идентификатор сделки
                      example: 231
                    group_id:
                      type: integer
                      description: Идентификатор группы сделок
                      example: 0
                    date:
                      type: integer
                      description: Время сделки в Unix timestamp
                      example: 1720281204
                    price:
                      type: number
                      format: float
                      description: Цена сделки
                      example: 3.24
                    volume:
                      type: integer
                      description: Объем сделки
                      example: 1
                    type:
                      type: string
                      description: Тип сделки (buy/sell)
                      example: "buy"

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            description:
              type: string

  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            SweetsGoldZero:
              value:
                error:
                  code: 400
                  description: "Sweets/Gold is 0"
            UserNotSet:
              value:
                error:
                  code: 400
                  description: "User is not set"
    Forbidden:
      description: Доступ запрещен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccountNotUser:
              value:
                error:
                  code: 403
                  description: "Account is not user"
    NotFound:
      description: Пользователь не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            UserNotFound:
              value:
                error:
                  code: 404
                  description: "User not found"
    Conflict:
      description: Конфликт условий
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            NotEnough:
              value:
                error:
                  code: 409
                  description: "Not enough sweets/gold. Need $value"
            UnsuccessfulDonate:
              value:
                error:
                  code: 409
                  description: "Unsuccessful donate score decrease"
            UnsuccessfulDecrease:
              value:
                error:
                  code: 409
                  description: "Unsuccessful sweets/gold decrease"
    InternalError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            CalculationError:
              value:
                error:
                  code: 500
                  description: "Ошибка в расчёте сжигании ирисок. Обратитесь к агентам"